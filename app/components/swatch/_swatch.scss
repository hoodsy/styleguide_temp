/*
** Swatch
*/

.swatches-container {
  overflow: auto;
}
.swatch-container {
  margin: 0 .25em 1em 0;
  float: left;
}
.swatch {
  width: 6em;
  height: 6em;
}
.swatch-primary {
  width: 16em;
}
.swatch-secondary {
  width: 12em;
}
.swatch-primary,
.swatch-secondary {
  margin: 0 1em 0 0;
}

// Builds square swatches from a number-keyed hash of colors.
@mixin make-swatches($colors) {
  @each $color in $colors {
    & .#{nth($color, 2)} {
      background-color: #{nth($color, 1)};
    }
  }
}

// Colors
$colors: (
  ($blue, blue),
  ($blue-dark, blue-dark),
  ($blue-light, blue-light),
  ($blue-lighter, blue-lighter),

  ($teal, teal),
  ($teal-dark, teal-dark),
  ($teal-light, teal-light),
  ($teal-lighter, teal-lighter),

  ($citrus, citrus),
  ($citrus-dark, citrus-dark),
  ($citrus-light, citrus-light),
  ($citrus-lighter, citrus-lighter),

  ($green, green),
  ($yellow, yellow),
  ($red, red),

  ($midnight, midnight),
  ($midnight-90, midnight-90),
  ($midnight-80, midnight-80),
  ($midnight-70, midnight-70),
  ($midnight-60, midnight-60),
  ($midnight-50, midnight-50),
  ($midnight-40, midnight-40),
  ($midnight-30, midnight-30),
  ($midnight-20, midnight-20),
  ($midnight-10, midnight-10),
  ($midnight-5, midnight-5),
  ($midnight-2, midnight-2)
);

// Make primary color classes
@include make-swatches($colors);

.labels-container {
  font-size: $font-size-small;
  margin: .5em 0 0 0;
}
.label {
  margin: .25em 0 0 0; 
}